local BaseState = AssetManager.Require('basestate.txt');
local RunState = BaseState:new();
function RunState:new()
    local o = BaseState:new();
    self.__index = self;
    setmetatable(o,self);
    return o;
end

function RunState.start(self,stateID,stateMachine,fsmOwner)
    BaseState.start(self,stateID,stateMachine,fsmOwner);
    MessageCenter.AddListener('move',self);
end

function RunState.eventHandler(self,eventName,arg)
    if(eventName == 'move')then
        RunState.onMoveHandler(self,arg);
    end
end

function RunState.onMoveHandler(self,dir)
    if(self.stateMachine.currentState.stateID == self.stateID)then
        if((dir == 'left') and (self.fsmOwner.road ~= 'left'))then
            self.stateMachine:transimision('switchRoad','left');
        elseif((dir == 'right') and (self.fsmOwner.road ~= 'right'))then
            self.stateMachine:transimision('switchRoad','right');
        end
    end
end

function RunState:onEnter(arg)

end

function RunState:update()
    --在前方发射只检测Enemy Layer的射线，如果碰撞到，切换为battle模式
    local layerMask = LayerMask.NameToLayer('Enemy');
    layerMask = math.pow(2,layerMask);
    local hitted,rayCastInfo = Physics.Raycast(self.fsmOwner.transform.position,self.fsmOwner.transform.forward,Slua.out,self.fsmOwner.attackRange,layerMask);
    if(hitted == true)then
        self.fsmOwner.currentBattleEnemy = rayCastInfo.collider.gameObject:GetComponent(LuaBehaviour).table;
        MessageCenter.SendEvent('enterBattle',self.fsmOwner.currentBattleEnemy);
        self.stateMachine:transimision('battle',self.fsmOwner.currentBattleEnemy);
    end
end

function RunState:fixedUpdate()

    self.fsmOwner.transform.position = self.fsmOwner.transform.position + self.fsmOwner.transform.forward * Time.fixedDeltaTime * self.fsmOwner.characterData.speed;
end


return RunState;