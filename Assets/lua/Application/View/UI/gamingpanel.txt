local GamingPanel = {}

function GamingPanel:new(gameObject)
    local o = {};
    self.__index = self;
    setmetatable(o,self);
    o.gameObject = gameObject;
    o.transform = o.gameObject.transform;
    o:initUI();
    return o;
end

function GamingPanel.start(self)
end

function GamingPanel.eventHandler(self,eventName,arg)
end



function GamingPanel:initUI()

    --UI元素查找
    self.gridParent = self.transform:Find('content/Content');
    self.dirSprite = self.transform:Find('Info/dir/dirIcon'):GetComponent(UI.Image);
    self.remainStep = self.transform:Find('Info/remainStep/zhi'):GetComponent(UI.Text);
    self.nextIcon = self.transform:Find('Info/nextGrid/nextImage'):GetComponent(UI.Image);
    self.Score = self.transform:Find('Info/Score/Text'):GetComponent(UI.Text);
    

    local FormData = AssetManager.Require('formdata.txt');
    local LineData = AssetManager.Require('linedata.txt');
    local GridData = AssetManager.Require('griddata.txt');
    local formData = FormData:new();
    --查找行元素
    local lines = self.gridParent:GetComponentsInChildren(Transform);

    for k,v in ipairs(lines) do
        if(v ~= self.gridParent)then
            local lineData = LineData:new();
            --查找列元素
            local grids =  lines:GetComponentsInChildren(Transform);
            for z,x in ipairs(grids)do
                if(x ~= grids)then
                    --生成grid数据
                    local gridData = GridData:new(grids);
                    lineData:addGridData(z,gridData);
                end
            end
            formData:addLineData(k,lineData);
        end
    end


    --这里应该由数据层决定。。
    self.remainStep.text = "10"; 


    --test data.
    for k,v in ipairs(formData.lines)do
        for z,x in ipairs(v)do
            Debug.Log(x.grid.gameObject.name);
        end       
    end
end

return GamingPanel;